/* Layout mixins */

@mixin title($font-size, $line-height, $margin-bottom) {
    font-size: rem($font-size);
    line-height: rem($line-height);
    @if $margin-bottom !=0 {
        margin-bottom: rem($margin-bottom);
    }
    font-family: $regular-font;
}

@mixin content($line-height, $margin-bottom, $max-width) {
    line-height: rem($line-height);
    @if $margin-bottom !=0 {
        margin-bottom: rem($margin-bottom);
    }
    @if $max-width !=0 {
        max-width: $max-width;
        width: 100%;
    }
}

@mixin arrow($direction) {
    content: "";
    border: solid;
    border-width: 0 2px 2px 0;
    display: inline-block;
    padding: rem(2.5px);
    line-height: -8.6875rem;
    margin-bottom: rem(1px);
    margin-left: rem(6px);
    transition: transform 0.3s ease-out;
    @if $direction==right {
        transform: rotate(-45deg);
    }
    @if $direction==down {
        transform: rotate(45deg);
    }
    @if $direction==left {
        transform: rotate(135deg);
        margin-left: 0;
        margin-right: 0.375rem;
    }
}

@mixin arrow-hover($direction) {
    @if $direction==right {
        transform: translateX(4px) rotate(-45deg);
    }
    @if $direction==down {
        transform: translateY(4px) rotate(45deg);
    }
    @if $direction==left {
        transform: translateX(-4px) rotate(135deg);
    }
}

@mixin underline-forward {
    position: relative;
    &::before {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        height: rem(1px);
        content: "";
        background-color: $clr9;
        transition: transform .3s cubic-bezier(0.215, 0.61, 0.355, 1);
        transform: scaleX(0);
        transform-origin: right center;
    }
    &:hover {
        text-decoration: none;
        &::before {
            transform: scaleX(1);
            transform-origin: left center;
        }
    }
}


/* Breakpoint mixins */

@mixin for-mobile-layout {
    @media (max-width: $mobile-breakpoint) {
        @content;
    }
}

@mixin for-tablet-layout {
    @media (max-width: $tablet-breakpoint) {
        @content;
    }
}

@mixin for-small-desktop-layout {
    @media (max-width: $small-laptop-breakpoint) {
        @content;
    }
}

@mixin for-desktop-layout {
    @media (min-width: $tablet-breakpoint) {
        @content;
    }
}


/* Media  Mixins */

@mixin aspect-ratio($width, $height) {
    position: relative;
    overflow: hidden;
    &::before {
        display: block;
        content: "";
        width: 100%;
        padding-top: ($height / $width) * 100%;
    }
    >* {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
    }
    >img {
        height: 100%;
        object-fit: cover;
    }
}

// Mixin for removing hover efects on iphone screen
@mixin hover-supported {
    @media not all and (pointer: coarse) {
        &:hover {
            @content;
        }
    }
}